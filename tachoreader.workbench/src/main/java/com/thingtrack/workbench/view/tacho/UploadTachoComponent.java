package com.thingtrack.workbench.view.tacho;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class UploadTachoComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Label lblMessage;
	@AutoGenerated
	private Embedded messageType;
	@AutoGenerated
	private Label lblFileName;
	public enum MESSAGE_TYPE {
		INFO,
		WARNING,
		ERROR
	}
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public UploadTachoComponent(String fileName, MESSAGE_TYPE type, String message) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here		
		this.lblFileName.setValue(fileName);
		
		if (type.equals(MESSAGE_TYPE.INFO))
			messageType.setSource(new ThemeResource("img/info_message.png"));
		else if (type.equals(MESSAGE_TYPE.WARNING))
			messageType.setSource(new ThemeResource("img/warning_message.png"));
		else
			messageType.setSource(new ThemeResource("img/error_message.png"));
			
		this.lblMessage.setValue(message);
	}

	public void setMessageType(MESSAGE_TYPE type) {
		if (type.equals(MESSAGE_TYPE.INFO))
			messageType.setSource(new ThemeResource("img/info_message.png"));
		else if (type.equals(MESSAGE_TYPE.WARNING))
			messageType.setSource(new ThemeResource("img/warning_message.png"));
		else
			messageType.setSource(new ThemeResource("img/error_message.png"));
	}
	
	public void setMessage(String message) {
		this.lblMessage.setValue(message);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// lblFileName
		lblFileName = new Label();
		lblFileName.setImmediate(false);
		lblFileName.setWidth("100.0%");
		lblFileName.setHeight("-1px");
		lblFileName.setValue("Label");
		mainLayout.addComponent(lblFileName);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		mainLayout.setExpandRatio(horizontalLayout_1, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// messageType
		messageType = new Embedded();
		messageType.setImmediate(false);
		messageType.setWidth("32px");
		messageType.setHeight("32px");
		messageType.setSource(new ThemeResource(
				"img/component/embedded_icon.png"));
		messageType.setType(1);
		messageType.setMimeType("image/png");
		horizontalLayout_1.addComponent(messageType);
		
		// lblMessage
		lblMessage = new Label();
		lblMessage.setImmediate(false);
		lblMessage.setWidth("100.0%");
		lblMessage.setHeight("-1px");
		lblMessage.setValue("Label");
		horizontalLayout_1.addComponent(lblMessage);
		horizontalLayout_1.setExpandRatio(lblMessage, 1.0f);
		horizontalLayout_1.setComponentAlignment(lblMessage, new Alignment(33));
		
		return horizontalLayout_1;
	}

}
