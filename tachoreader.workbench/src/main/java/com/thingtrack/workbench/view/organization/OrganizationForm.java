package com.thingtrack.workbench.view.organization;

import com.thingtrack.tachoreader.domain.Organization;
import com.thingtrack.workbench.component.AbstractI18NValidableCustomComponent;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.PropertyId;
import com.vaadin.data.validator.BeanValidator;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class OrganizationForm extends AbstractI18NValidableCustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private TabSheet organizationTabSheet;
	@AutoGenerated
	private VerticalLayout descriptionLayout;
	@AutoGenerated
	@PropertyId("description")
	private TextArea descriptionField;
	@AutoGenerated
	private VerticalLayout generalLayout;
	@AutoGenerated
	@PropertyId("address")
	private TextField addressField;
	@AutoGenerated
	@PropertyId("name")
	private TextField nameField;
	@AutoGenerated
	private HorizontalLayout nameLayout;
	@AutoGenerated
	@PropertyId("active")
	private CheckBox activeField;
	@AutoGenerated
	@PropertyId("code")
	private TextField codeField;
	private static final int TAB_GENERAL = 0;
	private static final int TAB_DESCRIPTION = 1;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public OrganizationForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here		
    	initialize();    	       	
	}
	
	private void initialize() {
		codeField.setNullSettingAllowed(false);
		codeField.setNullRepresentation("");
		codeField.setImmediate(false);
		codeField.setValidationVisible(true);
		codeField.addValidator(new BeanValidator(Organization.class, "code"));

		nameField.setNullSettingAllowed(false);
		nameField.setNullRepresentation("");
		nameField.setImmediate(false);
		nameField.setValidationVisible(true);
		nameField.addValidator(new BeanValidator(Organization.class, "name"));
		
		addressField.setNullSettingAllowed(true);
		addressField.setNullRepresentation("");
		addressField.setImmediate(false);
		addressField.addValidator(new BeanValidator(Organization.class, "address"));				
		
		descriptionField.setNullSettingAllowed(true);
		descriptionField.setNullRepresentation("");
		descriptionField.setImmediate(false);
		descriptionField.addValidator(new BeanValidator(Organization.class, "description"));	
	}	
	
	@Override
	protected boolean isValidate() {
		boolean errorValidation = false;
		
		if (!codeField.isValid()) {
			codeField.setRequiredError("The code name is required");
			errorValidation = true;
		}
		else
			codeField.setRequiredError(null);

		if (!nameField.isValid()) {
			nameField.setRequiredError("The name is required");
			errorValidation = true;
		}
		else
			nameField.setRequiredError(null);
		
		return errorValidation;		
	}
	
	@Override
	protected void updateLabels() {
		organizationTabSheet.getTab(TAB_GENERAL).setCaption(getI18N().getMessage("com.thingtrack.workbench.view.organization.OrganizationForm.organizationTabSheet.tabOrganization.caption"));
		organizationTabSheet.getTab(TAB_DESCRIPTION).setCaption(getI18N().getMessage("com.thingtrack.workbench.view.organization.OrganizationForm.organizationTabSheet.tabOrganization.caption"));
		codeField.setCaption(getI18N().getMessage("com.thingtrack.workbench.view.organization.OrganizationForm.codeField.caption"));
		nameField.setCaption(getI18N().getMessage("com.thingtrack.workbench.view.organization.OrganizationForm.nameField.caption"));
		addressField.setCaption(getI18N().getMessage("com.thingtrack.workbench.view.organization.OrganizationForm.addressField.caption"));
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("400px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("400px");
		setHeight("-1px");
		
		// organizationTabSheet
		organizationTabSheet = buildOrganizationTabSheet();
		mainLayout.addComponent(organizationTabSheet);
		
		return mainLayout;
	}

	@AutoGenerated
	private TabSheet buildOrganizationTabSheet() {
		// common part: create layout
		organizationTabSheet = new TabSheet();
		organizationTabSheet.setImmediate(true);
		organizationTabSheet.setWidth("100.0%");
		organizationTabSheet.setHeight("-1px");
		
		// generalLayout
		generalLayout = buildGeneralLayout();
		organizationTabSheet.addTab(generalLayout, "General", null);
		
		// descriptionLayout
		descriptionLayout = buildDescriptionLayout();
		organizationTabSheet.addTab(descriptionLayout, "Description", null);
		
		return organizationTabSheet;
	}

	@AutoGenerated
	private VerticalLayout buildGeneralLayout() {
		// common part: create layout
		generalLayout = new VerticalLayout();
		generalLayout.setImmediate(false);
		generalLayout.setWidth("100.0%");
		generalLayout.setHeight("-1px");
		generalLayout.setMargin(false);
		generalLayout.setSpacing(true);
		
		// nameLayout
		nameLayout = buildNameLayout();
		generalLayout.addComponent(nameLayout);
		
		// nameField
		nameField = new TextField();
		nameField.setCaption("Name");
		nameField.setImmediate(false);
		nameField.setWidth("300px");
		nameField.setHeight("-1px");
		nameField.setRequired(true);
		generalLayout.addComponent(nameField);
		
		// addressField
		addressField = new TextField();
		addressField.setCaption("Address");
		addressField.setImmediate(false);
		addressField.setWidth("300px");
		addressField.setHeight("-1px");
		addressField.setRequired(true);
		generalLayout.addComponent(addressField);
		
		return generalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildNameLayout() {
		// common part: create layout
		nameLayout = new HorizontalLayout();
		nameLayout.setImmediate(false);
		nameLayout.setWidth("100.0%");
		nameLayout.setHeight("-1px");
		nameLayout.setMargin(false);
		nameLayout.setSpacing(true);
		
		// codeField
		codeField = new TextField();
		codeField.setCaption("Code");
		codeField.setImmediate(false);
		codeField.setWidth("150px");
		codeField.setHeight("-1px");
		codeField.setRequired(true);
		nameLayout.addComponent(codeField);
		
		// activeField
		activeField = new CheckBox();
		activeField.setCaption("Active");
		activeField.setImmediate(true);
		activeField.setWidth("-1px");
		activeField.setHeight("-1px");
		nameLayout.addComponent(activeField);
		nameLayout.setExpandRatio(activeField, 1.0f);
		nameLayout.setComponentAlignment(activeField, new Alignment(10));
		
		return nameLayout;
	}

	@AutoGenerated
	private VerticalLayout buildDescriptionLayout() {
		// common part: create layout
		descriptionLayout = new VerticalLayout();
		descriptionLayout.setImmediate(false);
		descriptionLayout.setWidth("100.0%");
		descriptionLayout.setHeight("-1px");
		descriptionLayout.setMargin(false);
		descriptionLayout.setSpacing(true);
		
		// descriptionField
		descriptionField = new TextArea();
		descriptionField.setImmediate(false);
		descriptionField.setWidth("100.0%");
		descriptionField.setHeight("-1px");
		descriptionLayout.addComponent(descriptionField);
		
		return descriptionLayout;
	}
}
