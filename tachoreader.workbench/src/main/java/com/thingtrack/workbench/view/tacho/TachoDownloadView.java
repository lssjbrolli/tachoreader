package com.thingtrack.workbench.view.tacho;

import javax.annotation.PostConstruct;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import ru.xpoft.vaadin.VaadinView;

import com.thingtrack.workbench.component.AbstractI18NView;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.VerticalLayout;

@Component
@Scope("prototype")
@VaadinView(value=TachoDownloadView.NAME, cached=true)
public class TachoDownloadView extends AbstractI18NView implements View {
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	private static final long serialVersionUID = 1L;
	public static final String NAME = "tachos_download";
		
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @throws Exception 
	 */
	public TachoDownloadView() throws Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initialize(); 		
	}
	
	private void initialize() throws Exception {
	
	}
	
	@Override
    public void enter(ViewChangeEvent event) {
    }
	
	@PostConstruct
    public void PostConstruct() {        	
    	
    }

	@Override
	protected void updateLabels() {
		if (getI18N() != null) {
			
		}
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		return mainLayout;
	}
}
