package com.thingtrack.workbench.view.tacho;

import java.util.List;

import org.vaadin.teemu.wizards.WizardStep;

import com.thingtrack.tachoreader.domain.TachoDriver;
import com.thingtrack.tachoreader.domain.TachoVehicle;
import com.thingtrack.workbench.component.AbstractI18NCustomComponent;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.server.FontAwesome;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Component;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.RowHeaderMode;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class WizardStepResult extends AbstractI18NCustomComponent implements WizardStep {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table tachosTable;
	@AutoGenerated
	private Panel pnHelpStepTachos;
	@AutoGenerated
	private VerticalLayout helpTachosLayout;
	@AutoGenerated
	private Label lblHelpTachos;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public WizardStepResult() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		pnHelpStepTachos.setCaption("Help Result your Tachos");
		pnHelpStepTachos.setIcon(FontAwesome.INFO_CIRCLE);
		pnHelpStepTachos.addStyleName("color3");	
		
		StringBuffer helpTachosUpload = new StringBuffer("Desde esta pantalla usted podrá bajar la lista de tachos para los vehículos y el intervalo de fechas seleccionado previamente.");
		helpTachosUpload.append(" Para continuar pulse el botón \"Finalizar\".");
				
		lblHelpTachos.setContentMode(ContentMode.HTML);
		lblHelpTachos.setValue(helpTachosUpload.toString());
		
		tachosTable.setRowHeaderMode(RowHeaderMode.HIDDEN);
		
		tachosTable.removeAllItems();
		tachosTable.addContainerProperty("Key", String.class, null);
		tachosTable.addContainerProperty("Tachos", Integer.class, null);
		
		tachosTable.setColumnHeaders(new String[] { "Register/Driver", "Tachos" } );
	}
	
	@SuppressWarnings("unchecked")
	public void loadDatasource(List<TachoDriver> tachosDriver, List<TachoVehicle> tachosVehicle) {
		tachosTable.removeAllItems();
		
		for (TachoVehicle tachoVehicle : tachosVehicle) {
			Item tachoVehicleItem = tachosTable.addItem("V_" + tachoVehicle.getId());
			
			tachoVehicleItem.getItemProperty("Key").setValue(tachoVehicle.getVehicle().getRegistration());
			tachoVehicleItem.getItemProperty("Tachos").setValue(1);
		}
		
		for (TachoDriver tachoDriver : tachosDriver) {
			Item tachoDriverItem = tachosTable.addItem("C_" + tachoDriver.getId());
			
			tachoDriverItem.getItemProperty("Key").setValue(tachoDriver.getDriver().getName());
			tachoDriverItem.getItemProperty("Tachos").setValue(1);
		}		
		
		if (tachosTable.getItemIds().size() > 0)
			tachosTable.select(tachosTable.getItemIds().toArray()[0]);	
	}
	
	@Override
	public String getCaption() {
		 return "Tachos Result Step"; 
	}
	
	@Override
	public Component getContent() {
		return this;
	}

	@Override
	public boolean onAdvance() {
		return true;
	}

	@Override
	public boolean onBack() {
		return true;
	}
	
	@Override
	protected void updateLabels() {
		// TODO Auto-generated method stub
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// pnHelpStepTachos
		pnHelpStepTachos = buildPnHelpStepTachos();
		mainLayout.addComponent(pnHelpStepTachos);
		
		// tachosTable
		tachosTable = new Table();
		tachosTable.setImmediate(false);
		tachosTable.setWidth("100.0%");
		tachosTable.setHeight("100.0%");
		mainLayout.addComponent(tachosTable);
		mainLayout.setExpandRatio(tachosTable, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPnHelpStepTachos() {
		// common part: create layout
		pnHelpStepTachos = new Panel();
		pnHelpStepTachos.setImmediate(false);
		pnHelpStepTachos.setWidth("100.0%");
		pnHelpStepTachos.setHeight("-1px");
		
		// helpTachosLayout
		helpTachosLayout = buildHelpTachosLayout();
		pnHelpStepTachos.setContent(helpTachosLayout);
		
		return pnHelpStepTachos;
	}

	@AutoGenerated
	private VerticalLayout buildHelpTachosLayout() {
		// common part: create layout
		helpTachosLayout = new VerticalLayout();
		helpTachosLayout.setImmediate(false);
		helpTachosLayout.setWidth("100.0%");
		helpTachosLayout.setHeight("100.0%");
		helpTachosLayout.setMargin(true);
		
		// lblHelpTachoStep
		lblHelpTachos = new Label();
		lblHelpTachos.setImmediate(false);
		lblHelpTachos.setWidth("100.0%");
		lblHelpTachos.setHeight("-1px");
		lblHelpTachos.setValue("Label");
		helpTachosLayout.addComponent(lblHelpTachos);
		
		return helpTachosLayout;
	}

}
