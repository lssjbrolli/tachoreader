package com.thingtrack.workbench.view.tacho;

import java.util.List;

import org.vaadin.teemu.wizards.WizardStep;

import com.thingtrack.tachoreader.domain.TachoDriver;
import com.thingtrack.workbench.component.AbstractI18NCustomComponent;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.server.FontAwesome;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Component;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.RowHeaderMode;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class WizardStepDriver extends AbstractI18NCustomComponent implements WizardStep {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table driverTable;
	@AutoGenerated
	private Panel pnHelpStepTachos;
	@AutoGenerated
	private VerticalLayout helpTachosLayout;
	@AutoGenerated
	private Label lblHelpTachosStep;
	private BeanItemContainer<TachoDriver> tachoContainer = new BeanItemContainer<TachoDriver>(TachoDriver.class);
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public WizardStepDriver() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		pnHelpStepTachos.setCaption("Help Upload your Tachos");
		pnHelpStepTachos.setIcon(FontAwesome.INFO_CIRCLE);
		pnHelpStepTachos.addStyleName("color3");	
		
		StringBuffer helpTachosUpload = new StringBuffer("Desde esta pantalla usted podrá consultar la lista de conductores que han utilizado los vehículos anteriores en el intervalo de fechas seleccionado previamente.");
		helpTachosUpload.append(" Para continuar pulse el botón \"Siguiente\".");
				
		lblHelpTachosStep.setContentMode(ContentMode.HTML);
		lblHelpTachosStep.setValue(helpTachosUpload.toString());
		
		driverTable.setRowHeaderMode(RowHeaderMode.HIDDEN);
	}
	
	public List<TachoDriver> loadDatasource(List<TachoDriver> tachosDriver) throws Exception {				
		tachoContainer.removeAllItems();
		tachoContainer.addAll(tachosDriver);
		
		tachoContainer.addNestedContainerProperty("driver.name");
		tachoContainer.addNestedContainerProperty("driver.cardNumber");
		
		driverTable.setContainerDataSource(tachoContainer);    		
		
		driverTable.setVisibleColumns((Object[]) new String[] { "driver.name", "driver.cardNumber" } );
		driverTable.setColumnHeaders(new String[] { "Name", "Card Number" } );		
		
		if (tachoContainer.size() > 0)
			driverTable.select(tachoContainer.getIdByIndex(0));								
		
		return tachosDriver;
	}
	
	@Override
	public String getCaption() {
		 return "Driver List Step"; 
	}
	 
	@Override
	public Component getContent() {
		return this;
	}

	@Override
	public boolean onAdvance() {
		return true;
	}

	@Override
	public boolean onBack() {
		return true;
	}
	
	@Override
	protected void updateLabels() {
		// TODO Auto-generated method stub
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// pnHelpStepTachos
		pnHelpStepTachos = buildPnHelpStepTachos();
		mainLayout.addComponent(pnHelpStepTachos);
		
		// driverTable
		driverTable = new Table();
		driverTable.setImmediate(false);
		driverTable.setWidth("100.0%");
		driverTable.setHeight("100.0%");
		mainLayout.addComponent(driverTable);
		mainLayout.setExpandRatio(driverTable, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPnHelpStepTachos() {
		// common part: create layout
		pnHelpStepTachos = new Panel();
		pnHelpStepTachos.setImmediate(false);
		pnHelpStepTachos.setWidth("100.0%");
		pnHelpStepTachos.setHeight("-1px");
		
		// helpTachosLayout
		helpTachosLayout = buildHelpTachosLayout();
		pnHelpStepTachos.setContent(helpTachosLayout);
		
		return pnHelpStepTachos;
	}

	@AutoGenerated
	private VerticalLayout buildHelpTachosLayout() {
		// common part: create layout
		helpTachosLayout = new VerticalLayout();
		helpTachosLayout.setImmediate(false);
		helpTachosLayout.setWidth("100.0%");
		helpTachosLayout.setHeight("100.0%");
		helpTachosLayout.setMargin(true);
		
		// lblHelpTachosStep
		lblHelpTachosStep = new Label();
		lblHelpTachosStep.setImmediate(false);
		lblHelpTachosStep.setWidth("100.0%");
		lblHelpTachosStep.setHeight("-1px");
		lblHelpTachosStep.setValue("Label");
		helpTachosLayout.addComponent(lblHelpTachosStep);
		
		return helpTachosLayout;
	}

}
