package com.thingtrack.workbench.component;

import java.io.Serializable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.shared.MouseEventDetails;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;

@SuppressWarnings("serial")
public class PaginationToolbar extends AbstractI18NCustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private Button btnLastPage;
	@AutoGenerated
	private Button btnNextPage;
	@AutoGenerated
	private Label lblPageNumber;
	@AutoGenerated
	private Button btnPreviousPage;
	@AutoGenerated
	private Button btnFirstPage;
	@AutoGenerated
	private Label lblSeparator;
	@AutoGenerated
	private ComboBox cmbPageSize;
	@AutoGenerated
	private Label lblPageSize;
	private ClickChangePageSizeListener clickChangePageSizeListener = null;
	private ClickFirstPageListener clickFirstPageListener = null;
	private ClickPreviousPageListener clickPreviousPageListener = null;
	private ClickNextPageListener clickNextPageListener = null;
	private ClickLastPageListener clickLastPageListener = null;
		
	private int totPages=0;
	private int pageNumber=1;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PaginationToolbar() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		cmbPageSize.setNullSelectionAllowed(false);
		cmbPageSize.addItem("50");
		cmbPageSize.addItem("100");
		cmbPageSize.addItem("1000");
		cmbPageSize.select("100");
		
		cmbPageSize.addValueChangeListener(new ValueChangeListener() {		
			@Override
			public void valueChange(ValueChangeEvent event) {
				pageNumber = 1;
            	
            	lblPageNumber.setValue(pageNumber + "/" + totPages);
            	
            	setStatusToolbar();
            	
				if (clickChangePageSizeListener != null)					
					clickChangePageSizeListener.changePageSizeClick(new PageEvent(cmbPageSize, null, pageNumber, Integer.parseInt(cmbPageSize.getValue().toString())));				
			}
		});
		
		btnFirstPage.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
            	pageNumber = 1;
            	
            	lblPageNumber.setValue(pageNumber + "/" + totPages);
            	
            	setStatusToolbar();
            	
				if (clickFirstPageListener != null)					
					clickFirstPageListener.firstPageClick(new PageEvent(event.getComponent(), null, pageNumber, Integer.parseInt(cmbPageSize.getValue().toString())));
            }
        });
		
		btnPreviousPage.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
            	pageNumber--;
            	
            	lblPageNumber.setValue(pageNumber + "/" + totPages);
            	
            	setStatusToolbar();
            	
				if (clickPreviousPageListener != null)					
					clickPreviousPageListener.previousPageClick(new PageEvent(event.getComponent(), null, pageNumber, Integer.parseInt(cmbPageSize.getValue().toString())));
            }
        });
		
		btnNextPage.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
            	pageNumber++;
            	
            	lblPageNumber.setValue(pageNumber + "/" + totPages);
            	
            	setStatusToolbar();
            	
				if (clickNextPageListener != null)					
					clickNextPageListener.nextPageClick(new PageEvent(event.getComponent(), null, pageNumber, Integer.parseInt(cmbPageSize.getValue().toString())));
            }
        });
		
		btnLastPage.addClickListener(new Button.ClickListener() {			
            @Override
            public void buttonClick(ClickEvent event) {
    			pageNumber = totPages;
    			
    			lblPageNumber.setValue(pageNumber + "/" + totPages);
    			
    			setStatusToolbar();
    			
				if (clickLastPageListener != null)					
					clickLastPageListener.lastPageClick(new PageEvent(event.getComponent(), null, pageNumber, Integer.parseInt(cmbPageSize.getValue().toString())));
            }
        });
	}

	public int getTotPages() {
		return this.totPages;
	}
	public void setTotPages(int totPages) {
		this.totPages = totPages;
		
		lblPageNumber.setValue(pageNumber + "/" + totPages);
		
		setStatusToolbar();
	}
	public int getPageSize() {
		return Integer.parseInt(cmbPageSize.getValue().toString());		
	}
	public int getPageNumber() {
		return this.pageNumber;		
	}
	
	private void setStatusToolbar() {
		if (this.pageNumber == 1) {
			btnFirstPage.setEnabled(false);
			btnPreviousPage.setEnabled(false);
			btnNextPage.setEnabled(true);
			btnLastPage.setEnabled(true);
			
			if (this.totPages == 1) {
				btnNextPage.setEnabled(false);
				btnLastPage.setEnabled(false);	
			}
		} else if (this.pageNumber == totPages) {
			btnFirstPage.setEnabled(true);
			btnPreviousPage.setEnabled(true);
			btnNextPage.setEnabled(false);
			btnLastPage.setEnabled(false);
			
			if (this.pageNumber == 1) {
				btnFirstPage.setEnabled(false);
				btnPreviousPage.setEnabled(false);	
			}
		} 
		else {
			btnFirstPage.setEnabled(true);
			btnPreviousPage.setEnabled(true);
			btnNextPage.setEnabled(true);
			btnLastPage.setEnabled(true);
		}	
	}
	
	public void addClickChangePageSizeListener(ClickChangePageSizeListener listener) {
		this.clickChangePageSizeListener = listener;		
	}
	public void addClickFirstPageListener(ClickFirstPageListener listener) {
		this.clickFirstPageListener = listener;		
	}
	public void addClickPreviousPageListener(ClickPreviousPageListener listener) {
		this.clickPreviousPageListener = listener;		
	}
	public void addClickNextPageListener(ClickNextPageListener listener) {
		this.clickNextPageListener = listener;		
	}
	public void addClickLastPageListener(ClickLastPageListener listener) {
		this.clickLastPageListener = listener;		
	}
	
	// pagination toolbar listeners
	public interface ClickChangePageSizeListener extends Serializable {
        public void changePageSizeClick(PageEvent event);

    }	
	public interface ClickFirstPageListener extends Serializable {
        public void firstPageClick(PageEvent event);

    }	
	public interface ClickPreviousPageListener extends Serializable {
        public void previousPageClick(PageEvent event);

    }
	public interface ClickNextPageListener extends Serializable {
        public void nextPageClick(PageEvent event);

    }
	public interface ClickLastPageListener extends Serializable {
        public void lastPageClick(PageEvent event);

    }
	
	public class PageEvent extends ClickEvent {
		private int pageNumber;
		private int pageSize;
		
		public PageEvent(Component source) {
            super(source);
        }
		
		public PageEvent(Component source, MouseEventDetails details) {
			super(source, details);
		}
		
		public PageEvent(Component source, MouseEventDetails details, int pageNumber, int pageSize ) {
			super(source, details);
			
			this.pageNumber = pageNumber;
			this.pageSize = pageSize;
		}

		public int getPageNumber() {
			return this.pageNumber;			
		}
		
		public int getPageSize() {
			return this.pageSize;			
		}		
	}
	
	@Override
	protected void updateLabels() {
		lblPageSize.setValue(getI18N().getMessage("com.thingtrack.workbench.component.PaginationToolbar.lblPageSize.value"));
		btnFirstPage.setDescription(getI18N().getMessage("com.thingtrack.workbench.component.PaginationToolbar.btnFirstPage.description"));
		btnPreviousPage.setDescription(getI18N().getMessage("com.thingtrack.workbench.component.PaginationToolbar.btnPreviousPage.description"));
		btnNextPage.setDescription(getI18N().getMessage("com.thingtrack.workbench.component.PaginationToolbar.btnNextPage.description"));
		btnLastPage.setDescription(getI18N().getMessage("com.thingtrack.workbench.component.PaginationToolbar.btnLastPage.description"));
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// lblPageSize
		lblPageSize = new Label();
		lblPageSize.setImmediate(false);
		lblPageSize.setWidth("-1px");
		lblPageSize.setHeight("-1px");
		lblPageSize.setValue("Page Size:  ");
		mainLayout.addComponent(lblPageSize);
		mainLayout.setComponentAlignment(lblPageSize, new Alignment(48));
		
		// cmbPageSize
		cmbPageSize = new ComboBox();
		cmbPageSize.setImmediate(true);
		cmbPageSize.setWidth("100px");
		cmbPageSize.setHeight("-1px");
		mainLayout.addComponent(cmbPageSize);
		
		// lblSeparator
		lblSeparator = new Label();
		lblSeparator.setImmediate(false);
		lblSeparator.setWidth("10px");
		lblSeparator.setHeight("-1px");
		lblSeparator.setValue("   ");
		mainLayout.addComponent(lblSeparator);
		
		// btnFirstPage
		btnFirstPage = new Button();
		btnFirstPage.setCaption("<<");
		btnFirstPage.setImmediate(true);
		btnFirstPage.setDescription("First Register");
		btnFirstPage.setWidth("-1px");
		btnFirstPage.setHeight("-1px");
		mainLayout.addComponent(btnFirstPage);
		
		// btnPreviousPage
		btnPreviousPage = new Button();
		btnPreviousPage.setCaption("<");
		btnPreviousPage.setImmediate(true);
		btnPreviousPage.setDescription("Previous Register");
		btnPreviousPage.setWidth("-1px");
		btnPreviousPage.setHeight("-1px");
		mainLayout.addComponent(btnPreviousPage);
		
		// lblPageNumber
		lblPageNumber = new Label();
		lblPageNumber.setImmediate(false);
		lblPageNumber.setWidth("-1px");
		lblPageNumber.setHeight("-1px");
		lblPageNumber.setValue("1/30");
		mainLayout.addComponent(lblPageNumber);
		mainLayout.setComponentAlignment(lblPageNumber, new Alignment(48));
		
		// btnNextPage
		btnNextPage = new Button();
		btnNextPage.setCaption(">");
		btnNextPage.setImmediate(true);
		btnNextPage.setDescription("Next Register");
		btnNextPage.setWidth("-1px");
		btnNextPage.setHeight("-1px");
		mainLayout.addComponent(btnNextPage);
		
		// btnLastPage
		btnLastPage = new Button();
		btnLastPage.setCaption(">>");
		btnLastPage.setImmediate(true);
		btnLastPage.setDescription("Last Register");
		btnLastPage.setWidth("-1px");
		btnLastPage.setHeight("-1px");
		mainLayout.addComponent(btnLastPage);
		mainLayout.setExpandRatio(btnLastPage, 1.0f);
		
		return mainLayout;
	}

}
