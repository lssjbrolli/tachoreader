package com.thingtrack.workbench.component;

import java.util.Date;

import com.thingtrack.tachoreader.domain.CardActivityDaily;
import com.thingtrack.tachoreader.domain.Driver;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class DriverActivityDailyCard extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel driverActivityPanel;
	@AutoGenerated
	private VerticalLayout driverActivityLayout;
	@AutoGenerated
	private DriverActivityDailyChart detailDriverActivityDailyChart;
	@AutoGenerated
	private HorizontalLayout resumeDriverActivityLayout;
	@AutoGenerated
	private VerticalLayout resumeDriverActivityDataLayout;
	@AutoGenerated
	private VerticalLayout resumeDriverActivityChartLayout;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public DriverActivityDailyCard() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		// set panel style
		TestIcon testIcon = new TestIcon(60);
		driverActivityPanel.setIcon(testIcon.get());
		driverActivityPanel.addStyleName("color1");		
	}
	
	public void paintCard(Driver driver, Date registerDate, CardActivityDaily cardActivityDaily) {
		// set driver activity card tittle
		driverActivityPanel.setCaption(driver.getName() + "-" + driver.getCardNumber());
		
		// fill detail driver activity card chart
		detailDriverActivityDailyChart.clearGraph();
		detailDriverActivityDailyChart.paintGraph(cardActivityDaily.getCardActivityDailyChanges());		
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// driverActivityPanel
		driverActivityPanel = buildDriverActivityPanel();
		mainLayout.addComponent(driverActivityPanel);
		mainLayout.setExpandRatio(driverActivityPanel, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildDriverActivityPanel() {
		// common part: create layout
		driverActivityPanel = new Panel();
		driverActivityPanel.setImmediate(false);
		driverActivityPanel.setWidth("100.0%");
		driverActivityPanel.setHeight("-1px");
		
		// driverActivityLayout
		driverActivityLayout = buildDriverActivityLayout();
		driverActivityPanel.setContent(driverActivityLayout);
		
		return driverActivityPanel;
	}

	@AutoGenerated
	private VerticalLayout buildDriverActivityLayout() {
		// common part: create layout
		driverActivityLayout = new VerticalLayout();
		driverActivityLayout.setImmediate(false);
		driverActivityLayout.setWidth("100.0%");
		driverActivityLayout.setHeight("-1px");
		driverActivityLayout.setMargin(true);
		
		// resumeDriverActivityLayout
		resumeDriverActivityLayout = buildResumeDriverActivityLayout();
		driverActivityLayout.addComponent(resumeDriverActivityLayout);
		
		// detailDriverActivityDailyChart
		detailDriverActivityDailyChart = new DriverActivityDailyChart();
		detailDriverActivityDailyChart.setImmediate(false);
		detailDriverActivityDailyChart.setWidth("100.0%");
		detailDriverActivityDailyChart.setHeight("-1px");
		driverActivityLayout.addComponent(detailDriverActivityDailyChart);
		
		return driverActivityLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildResumeDriverActivityLayout() {
		// common part: create layout
		resumeDriverActivityLayout = new HorizontalLayout();
		resumeDriverActivityLayout.setImmediate(false);
		resumeDriverActivityLayout.setWidth("100.0%");
		resumeDriverActivityLayout.setHeight("-1px");
		resumeDriverActivityLayout.setMargin(false);
		
		// resumeDriverActivityChartLayout
		resumeDriverActivityChartLayout = new VerticalLayout();
		resumeDriverActivityChartLayout.setImmediate(false);
		resumeDriverActivityChartLayout.setWidth("300px");
		resumeDriverActivityChartLayout.setHeight("200px");
		resumeDriverActivityChartLayout.setMargin(false);
		resumeDriverActivityLayout
				.addComponent(resumeDriverActivityChartLayout);
		
		// resumeDriverActivityDataLayout
		resumeDriverActivityDataLayout = new VerticalLayout();
		resumeDriverActivityDataLayout.setImmediate(false);
		resumeDriverActivityDataLayout.setWidth("100.0%");
		resumeDriverActivityDataLayout.setHeight("100.0%");
		resumeDriverActivityDataLayout.setMargin(false);
		resumeDriverActivityLayout.addComponent(resumeDriverActivityDataLayout);
		resumeDriverActivityLayout.setExpandRatio(
				resumeDriverActivityDataLayout, 1.0f);
		
		return resumeDriverActivityLayout;
	}

}
